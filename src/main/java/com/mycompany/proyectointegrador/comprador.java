/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectointegrador;

import static com.mycompany.proyectointegrador.ProyectoIntegrador.buscarProducto;
import static com.mycompany.proyectointegrador.ProyectoIntegrador.carrito;
import static com.mycompany.proyectointegrador.ProyectoIntegrador.inventario;
import java.math.BigDecimal;
import java.math.RoundingMode;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.lang.Object;
import javax.swing.JOptionPane;

/**
 *
 * @author mil_g
 */
public class comprador extends javax.swing.JFrame {

    /**
     * Creates new form comprador
     */
    public comprador() {
        initComponents();
        iniciarTablas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        catalogo = new javax.swing.JTable();
        agregarCarrito = new javax.swing.JButton();
        busqueda = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCarrito = new javax.swing.JTable();
        eliminarCarrito = new javax.swing.JButton();
        pagarCarrito = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 241));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Goudy Old Style", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(134, 116, 22));
        jLabel1.setText("WELCOME TO CINEPOLIADO!!");

        catalogo.setBackground(new java.awt.Color(254, 238, 184));
        catalogo.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        catalogo.setForeground(new java.awt.Color(134, 116, 22));
        catalogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Película", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        catalogo.setPreferredSize(new java.awt.Dimension(150, 235));
        jScrollPane1.setViewportView(catalogo);

        agregarCarrito.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        agregarCarrito.setForeground(new java.awt.Color(134, 116, 22));
        agregarCarrito.setText("AGREGAR");
        agregarCarrito.setPreferredSize(new java.awt.Dimension(75, 30));
        agregarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCarritoActionPerformed(evt);
            }
        });

        busqueda.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        busqueda.setForeground(new java.awt.Color(134, 116, 22));
        busqueda.setText("Buscar");
        busqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                busquedaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                busquedaFocusLost(evt);
            }
        });
        busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaActionPerformed(evt);
            }
        });
        busqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                busquedaKeyReleased(evt);
            }
        });

        tablaCarrito.setBackground(new java.awt.Color(254, 238, 184));
        tablaCarrito.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        tablaCarrito.setForeground(new java.awt.Color(134, 116, 22));
        tablaCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Película", "Precio "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCarrito.setPreferredSize(new java.awt.Dimension(150, 280));
        jScrollPane2.setViewportView(tablaCarrito);

        eliminarCarrito.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        eliminarCarrito.setForeground(new java.awt.Color(134, 116, 22));
        eliminarCarrito.setText("BASURA");
        eliminarCarrito.setPreferredSize(new java.awt.Dimension(75, 30));
        eliminarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCarritoActionPerformed(evt);
            }
        });

        pagarCarrito.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        pagarCarrito.setForeground(new java.awt.Color(134, 116, 22));
        pagarCarrito.setText("PAGAR");
        pagarCarrito.setPreferredSize(new java.awt.Dimension(75, 30));
        pagarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarCarritoActionPerformed(evt);
            }
        });

        salir.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        salir.setForeground(new java.awt.Color(134, 116, 22));
        salir.setText("SALIR");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SimSun", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(134, 116, 22));
        jLabel2.setText("Catálogo");

        jLabel3.setFont(new java.awt.Font("SimSun", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(134, 116, 22));
        jLabel3.setText("Carrito");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(salir)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(busqueda, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(agregarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(eliminarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pagarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(agregarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(166, 166, 166))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(20, 20, 20))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pagarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(salir)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void busquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_busquedaActionPerformed

    private void agregarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCarritoActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel modeloCatalogo=(DefaultTableModel)catalogo.getModel();
        DefaultTableModel modeloCarrito=(DefaultTableModel)tablaCarrito.getModel();
        
        int index=catalogo.getSelectedRow();
        
        if(inventario.get(index).getCantidad()==0){
            JOptionPane.showMessageDialog(null, "Inventario insuficiente");
            return;
        }
        
        Object[] entrada={modeloCatalogo.getValueAt(index, 0),modeloCatalogo.getValueAt(index, 1)};
        
        modeloCarrito.addRow(entrada);
        
        inventario.get(index).setCantidad(inventario.get(index).getCantidad()-1);
    }//GEN-LAST:event_agregarCarritoActionPerformed

    private void eliminarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCarritoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel m=(DefaultTableModel)tablaCarrito.getModel();
        int index=tablaCarrito.getSelectedRow();
        
        //Regresar objeto al inventario
        String nombrePeli=(String)tablaCarrito.getValueAt(index, 0);
        int indexInv=buscarProducto(nombrePeli,inventario);
        inventario.get(indexInv).setCantidad(inventario.get(indexInv).getCantidad()+1);
        
        //Eliminar del carrito
        m.removeRow(index);
    }//GEN-LAST:event_eliminarCarritoActionPerformed

    private void busquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busquedaKeyReleased
        // TODO add your handling code here:
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(catalogo.getModel());
            catalogo.setRowSorter(rowSorter);
            
            // Apply the filter based on search text
            String searchText = busqueda.getText();  // Example search text
            RowFilter<TableModel, Object> filter = RowFilter.regexFilter(searchText, 0);  // Filter based on the first column ("Name")
            rowSorter.setRowFilter(filter);
    }//GEN-LAST:event_busquedaKeyReleased

    private void busquedaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_busquedaFocusLost
        // TODO add your handling code here:
        if(busqueda.getText().equals("")){
            busqueda.setText("Buscar");
        }
    }//GEN-LAST:event_busquedaFocusLost

    private void busquedaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_busquedaFocusGained
        // TODO add your handling code here:
        busqueda.setText("");
    }//GEN-LAST:event_busquedaFocusGained

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        guardarCarrito();
        new ingreso().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_salirActionPerformed

    private void pagarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarCarritoActionPerformed
        // TODO add your handling code here:
        if(tablaCarrito.getModel().getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Carrito vacío");
            return;
        }
        guardarCarrito();
        new Pagar().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pagarCarritoActionPerformed

    public final void iniciarTablas(){
        DefaultTableModel m=(DefaultTableModel)catalogo.getModel();
        DefaultTableModel n=(DefaultTableModel)tablaCarrito.getModel();
        Producto objeto;
        for(int i=0;i<inventario.size();i++){
            objeto=inventario.get(i);
            m.addRow(new Object[]{objeto.getNombre(),objeto.getPrecio()});
        }
        for(int i=0;i<carrito.size();i++){
            objeto=carrito.get(i);
            n.addRow(new Object[]{objeto.getNombre(),objeto.getPrecio()});
        }
        
        carrito.clear();
    }
    
    public void guardarCarrito(){
        DefaultTableModel m=(DefaultTableModel)tablaCarrito.getModel();
        for(int i=0;i<m.getRowCount();i++){
            Producto aux=new Producto();
            aux.setNombre((String)m.getValueAt(i, 0));
            aux.setPrecio((double)m.getValueAt(i, 1));
            carrito.add(aux);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(comprador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(comprador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(comprador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(comprador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new comprador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarCarrito;
    private javax.swing.JTextField busqueda;
    private javax.swing.JTable catalogo;
    private javax.swing.JButton eliminarCarrito;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pagarCarrito;
    private javax.swing.JButton salir;
    private javax.swing.JTable tablaCarrito;
    // End of variables declaration//GEN-END:variables
}
